<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coretheorylife.modules.gym.dao.TGymQualificationsMapper" >

    <resultMap id="BaseResultMap" type="com.coretheorylife.modules.gym.entity.TGymQualifications" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="gym_id" property="gymId" jdbcType="BIGINT" />
        <result column="qualifications_type" property="qualificationsType" jdbcType="INTEGER" />
        <result column="credentials_type" property="credentialsType" jdbcType="INTEGER" />
        <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
        <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
        <result column="company_name" property="companyName" jdbcType="VARCHAR" />
        <result column="legal_person" property="legalPerson" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="long_time_active" property="longTimeActive" jdbcType="BIT" />
        <result column="not_active_time" property="notActiveTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="create_user" property="createUser" jdbcType="BIGINT" />
        <result column="update_user" property="updateUser" jdbcType="BIGINT" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="delete_flag" property="deleteFlag" jdbcType="BIT" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, gym_id, qualifications_type, credentials_type, pic_url, company_no, company_name, 
        legal_person, address, long_time_active, not_active_time, status, create_time, update_time, 
        create_user, update_user, version, delete_flag
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.coretheorylife.modules.gym.entity.TGymQualificationsExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_gym_qualifications
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from t_gym_qualifications
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from t_gym_qualifications
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.coretheorylife.modules.gym.entity.TGymQualificationsExample" >
        delete from t_gym_qualifications
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.coretheorylife.modules.gym.entity.TGymQualifications" >
        insert into t_gym_qualifications (id, gym_id, qualifications_type, 
            credentials_type, pic_url, company_no, 
            company_name, legal_person, address, 
            long_time_active, not_active_time, status, 
            create_time, update_time, create_user, 
            update_user, version, delete_flag
            )
        values (#{id,jdbcType=BIGINT}, #{gymId,jdbcType=BIGINT}, #{qualificationsType,jdbcType=INTEGER}, 
            #{credentialsType,jdbcType=INTEGER}, #{picUrl,jdbcType=VARCHAR}, #{companyNo,jdbcType=VARCHAR}, 
            #{companyName,jdbcType=VARCHAR}, #{legalPerson,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
            #{longTimeActive,jdbcType=BIT}, #{notActiveTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
            #{updateUser,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, #{deleteFlag,jdbcType=BIT}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.coretheorylife.modules.gym.entity.TGymQualifications" >
        insert into t_gym_qualifications
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="gymId != null" >
                gym_id,
            </if>
            <if test="qualificationsType != null" >
                qualifications_type,
            </if>
            <if test="credentialsType != null" >
                credentials_type,
            </if>
            <if test="picUrl != null" >
                pic_url,
            </if>
            <if test="companyNo != null" >
                company_no,
            </if>
            <if test="companyName != null" >
                company_name,
            </if>
            <if test="legalPerson != null" >
                legal_person,
            </if>
            <if test="address != null" >
                address,
            </if>
            <if test="longTimeActive != null" >
                long_time_active,
            </if>
            <if test="notActiveTime != null" >
                not_active_time,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="createUser != null" >
                create_user,
            </if>
            <if test="updateUser != null" >
                update_user,
            </if>
            <if test="version != null" >
                version,
            </if>
            <if test="deleteFlag != null" >
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gymId != null" >
                #{gymId,jdbcType=BIGINT},
            </if>
            <if test="qualificationsType != null" >
                #{qualificationsType,jdbcType=INTEGER},
            </if>
            <if test="credentialsType != null" >
                #{credentialsType,jdbcType=INTEGER},
            </if>
            <if test="picUrl != null" >
                #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="companyNo != null" >
                #{companyNo,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null" >
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="legalPerson != null" >
                #{legalPerson,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="longTimeActive != null" >
                #{longTimeActive,jdbcType=BIT},
            </if>
            <if test="notActiveTime != null" >
                #{notActiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null" >
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="version != null" >
                #{version,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null" >
                #{deleteFlag,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.coretheorylife.modules.gym.entity.TGymQualificationsExample" resultType="java.lang.Integer" >
        select count(*) from t_gym_qualifications
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update t_gym_qualifications
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gymId != null" >
                gym_id = #{record.gymId,jdbcType=BIGINT},
            </if>
            <if test="record.qualificationsType != null" >
                qualifications_type = #{record.qualificationsType,jdbcType=INTEGER},
            </if>
            <if test="record.credentialsType != null" >
                credentials_type = #{record.credentialsType,jdbcType=INTEGER},
            </if>
            <if test="record.picUrl != null" >
                pic_url = #{record.picUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.companyNo != null" >
                company_no = #{record.companyNo,jdbcType=VARCHAR},
            </if>
            <if test="record.companyName != null" >
                company_name = #{record.companyName,jdbcType=VARCHAR},
            </if>
            <if test="record.legalPerson != null" >
                legal_person = #{record.legalPerson,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null" >
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.longTimeActive != null" >
                long_time_active = #{record.longTimeActive,jdbcType=BIT},
            </if>
            <if test="record.notActiveTime != null" >
                not_active_time = #{record.notActiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null" >
                create_user = #{record.createUser,jdbcType=BIGINT},
            </if>
            <if test="record.updateUser != null" >
                update_user = #{record.updateUser,jdbcType=BIGINT},
            </if>
            <if test="record.version != null" >
                version = #{record.version,jdbcType=INTEGER},
            </if>
            <if test="record.deleteFlag != null" >
                delete_flag = #{record.deleteFlag,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update t_gym_qualifications
        set id = #{record.id,jdbcType=BIGINT},
            gym_id = #{record.gymId,jdbcType=BIGINT},
            qualifications_type = #{record.qualificationsType,jdbcType=INTEGER},
            credentials_type = #{record.credentialsType,jdbcType=INTEGER},
            pic_url = #{record.picUrl,jdbcType=VARCHAR},
            company_no = #{record.companyNo,jdbcType=VARCHAR},
            company_name = #{record.companyName,jdbcType=VARCHAR},
            legal_person = #{record.legalPerson,jdbcType=VARCHAR},
            address = #{record.address,jdbcType=VARCHAR},
            long_time_active = #{record.longTimeActive,jdbcType=BIT},
            not_active_time = #{record.notActiveTime,jdbcType=TIMESTAMP},
            status = #{record.status,jdbcType=INTEGER},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            create_user = #{record.createUser,jdbcType=BIGINT},
            update_user = #{record.updateUser,jdbcType=BIGINT},
            version = #{record.version,jdbcType=INTEGER},
            delete_flag = #{record.deleteFlag,jdbcType=BIT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.coretheorylife.modules.gym.entity.TGymQualifications" >
        update t_gym_qualifications
        <set >
            <if test="gymId != null" >
                gym_id = #{gymId,jdbcType=BIGINT},
            </if>
            <if test="qualificationsType != null" >
                qualifications_type = #{qualificationsType,jdbcType=INTEGER},
            </if>
            <if test="credentialsType != null" >
                credentials_type = #{credentialsType,jdbcType=INTEGER},
            </if>
            <if test="picUrl != null" >
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="companyNo != null" >
                company_no = #{companyNo,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null" >
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="legalPerson != null" >
                legal_person = #{legalPerson,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="longTimeActive != null" >
                long_time_active = #{longTimeActive,jdbcType=BIT},
            </if>
            <if test="notActiveTime != null" >
                not_active_time = #{notActiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null" >
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null" >
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.coretheorylife.modules.gym.entity.TGymQualifications" >
        update t_gym_qualifications
        set gym_id = #{gymId,jdbcType=BIGINT},
            qualifications_type = #{qualificationsType,jdbcType=INTEGER},
            credentials_type = #{credentialsType,jdbcType=INTEGER},
            pic_url = #{picUrl,jdbcType=VARCHAR},
            company_no = #{companyNo,jdbcType=VARCHAR},
            company_name = #{companyName,jdbcType=VARCHAR},
            legal_person = #{legalPerson,jdbcType=VARCHAR},
            address = #{address,jdbcType=VARCHAR},
            long_time_active = #{longTimeActive,jdbcType=BIT},
            not_active_time = #{notActiveTime,jdbcType=TIMESTAMP},
            status = #{status,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=BIGINT},
            update_user = #{updateUser,jdbcType=BIGINT},
            version = #{version,jdbcType=INTEGER},
            delete_flag = #{deleteFlag,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>