<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coretheorylife.modules.shop.dao.TOrderLineMapper" >

    <resultMap id="BaseResultMap" type="com.coretheorylife.modules.shop.entity.TOrderLine" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="order_id" property="orderId" jdbcType="BIGINT" />
        <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
        <result column="number" property="number" jdbcType="INTEGER" />
        <result column="discount_rate" property="discountRate" jdbcType="DECIMAL" />
        <result column="discount_number" property="discountNumber" jdbcType="INTEGER" />
        <result column="specification" property="specification" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="create_user" property="createUser" jdbcType="BIGINT" />
        <result column="update_user" property="updateUser" jdbcType="BIGINT" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="delete_flag" property="deleteFlag" jdbcType="BIT" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, order_id, goods_id, number, discount_rate, discount_number, specification, create_time, 
        update_time, create_user, update_user, version, delete_flag
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.coretheorylife.modules.shop.entity.TOrderLineExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_order_line
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from t_order_line
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from t_order_line
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.coretheorylife.modules.shop.entity.TOrderLineExample" >
        delete from t_order_line
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.coretheorylife.modules.shop.entity.TOrderLine" >
        insert into t_order_line (id, order_id, goods_id, 
            number, discount_rate, discount_number, 
            specification, create_time, update_time, 
            create_user, update_user, version, 
            delete_flag)
        values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, 
            #{number,jdbcType=INTEGER}, #{discountRate,jdbcType=DECIMAL}, #{discountNumber,jdbcType=INTEGER}, 
            #{specification,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
            #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, 
            #{deleteFlag,jdbcType=BIT})
    </insert>

    <insert id="insertSelective" parameterType="com.coretheorylife.modules.shop.entity.TOrderLine" >
        insert into t_order_line
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="orderId != null" >
                order_id,
            </if>
            <if test="goodsId != null" >
                goods_id,
            </if>
            <if test="number != null" >
                number,
            </if>
            <if test="discountRate != null" >
                discount_rate,
            </if>
            <if test="discountNumber != null" >
                discount_number,
            </if>
            <if test="specification != null" >
                specification,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="createUser != null" >
                create_user,
            </if>
            <if test="updateUser != null" >
                update_user,
            </if>
            <if test="version != null" >
                version,
            </if>
            <if test="deleteFlag != null" >
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orderId != null" >
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="goodsId != null" >
                #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="number != null" >
                #{number,jdbcType=INTEGER},
            </if>
            <if test="discountRate != null" >
                #{discountRate,jdbcType=DECIMAL},
            </if>
            <if test="discountNumber != null" >
                #{discountNumber,jdbcType=INTEGER},
            </if>
            <if test="specification != null" >
                #{specification,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null" >
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="version != null" >
                #{version,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null" >
                #{deleteFlag,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.coretheorylife.modules.shop.entity.TOrderLineExample" resultType="java.lang.Integer" >
        select count(*) from t_order_line
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update t_order_line
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orderId != null" >
                order_id = #{record.orderId,jdbcType=BIGINT},
            </if>
            <if test="record.goodsId != null" >
                goods_id = #{record.goodsId,jdbcType=BIGINT},
            </if>
            <if test="record.number != null" >
                number = #{record.number,jdbcType=INTEGER},
            </if>
            <if test="record.discountRate != null" >
                discount_rate = #{record.discountRate,jdbcType=DECIMAL},
            </if>
            <if test="record.discountNumber != null" >
                discount_number = #{record.discountNumber,jdbcType=INTEGER},
            </if>
            <if test="record.specification != null" >
                specification = #{record.specification,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null" >
                create_user = #{record.createUser,jdbcType=BIGINT},
            </if>
            <if test="record.updateUser != null" >
                update_user = #{record.updateUser,jdbcType=BIGINT},
            </if>
            <if test="record.version != null" >
                version = #{record.version,jdbcType=INTEGER},
            </if>
            <if test="record.deleteFlag != null" >
                delete_flag = #{record.deleteFlag,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update t_order_line
        set id = #{record.id,jdbcType=BIGINT},
            order_id = #{record.orderId,jdbcType=BIGINT},
            goods_id = #{record.goodsId,jdbcType=BIGINT},
            number = #{record.number,jdbcType=INTEGER},
            discount_rate = #{record.discountRate,jdbcType=DECIMAL},
            discount_number = #{record.discountNumber,jdbcType=INTEGER},
            specification = #{record.specification,jdbcType=VARCHAR},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            create_user = #{record.createUser,jdbcType=BIGINT},
            update_user = #{record.updateUser,jdbcType=BIGINT},
            version = #{record.version,jdbcType=INTEGER},
            delete_flag = #{record.deleteFlag,jdbcType=BIT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.coretheorylife.modules.shop.entity.TOrderLine" >
        update t_order_line
        <set >
            <if test="orderId != null" >
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="goodsId != null" >
                goods_id = #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="number != null" >
                number = #{number,jdbcType=INTEGER},
            </if>
            <if test="discountRate != null" >
                discount_rate = #{discountRate,jdbcType=DECIMAL},
            </if>
            <if test="discountNumber != null" >
                discount_number = #{discountNumber,jdbcType=INTEGER},
            </if>
            <if test="specification != null" >
                specification = #{specification,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null" >
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null" >
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.coretheorylife.modules.shop.entity.TOrderLine" >
        update t_order_line
        set order_id = #{orderId,jdbcType=BIGINT},
            goods_id = #{goodsId,jdbcType=BIGINT},
            number = #{number,jdbcType=INTEGER},
            discount_rate = #{discountRate,jdbcType=DECIMAL},
            discount_number = #{discountNumber,jdbcType=INTEGER},
            specification = #{specification,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=BIGINT},
            update_user = #{updateUser,jdbcType=BIGINT},
            version = #{version,jdbcType=INTEGER},
            delete_flag = #{deleteFlag,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>