<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coretheorylife.modules.shop.dao.TOrderLogMapper" >

    <resultMap id="BaseResultMap" type="com.coretheorylife.modules.shop.entity.TOrderLog" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="shop_id" property="shopId" jdbcType="BIGINT" />
        <result column="order_id" property="orderId" jdbcType="BIGINT" />
        <result column="purchaser_id" property="purchaserId" jdbcType="BIGINT" />
        <result column="now_ship_status" property="nowShipStatus" jdbcType="INTEGER" />
        <result column="now_status" property="nowStatus" jdbcType="INTEGER" />
        <result column="before_ship_status" property="beforeShipStatus" jdbcType="INTEGER" />
        <result column="before_status" property="beforeStatus" jdbcType="INTEGER" />
        <result column="create_order_flag" property="createOrderFlag" jdbcType="BIT" />
        <result column="code" property="code" jdbcType="INTEGER" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="create_user" property="createUser" jdbcType="BIGINT" />
        <result column="update_user" property="updateUser" jdbcType="BIGINT" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="delete_flag" property="deleteFlag" jdbcType="BIT" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, shop_id, order_id, purchaser_id, now_ship_status, now_status, before_ship_status, 
        before_status, create_order_flag, code, description, create_time, update_time, create_user, 
        update_user, version, delete_flag
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.coretheorylife.modules.shop.entity.TOrderLogExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_order_log
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from t_order_log
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from t_order_log
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.coretheorylife.modules.shop.entity.TOrderLogExample" >
        delete from t_order_log
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.coretheorylife.modules.shop.entity.TOrderLog" >
        insert into t_order_log (id, shop_id, order_id, 
            purchaser_id, now_ship_status, now_status, 
            before_ship_status, before_status, create_order_flag, 
            code, description, create_time, 
            update_time, create_user, update_user, 
            version, delete_flag)
        values (#{id,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, 
            #{purchaserId,jdbcType=BIGINT}, #{nowShipStatus,jdbcType=INTEGER}, #{nowStatus,jdbcType=INTEGER}, 
            #{beforeShipStatus,jdbcType=INTEGER}, #{beforeStatus,jdbcType=INTEGER}, #{createOrderFlag,jdbcType=BIT}, 
            #{code,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
            #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, 
            #{version,jdbcType=INTEGER}, #{deleteFlag,jdbcType=BIT})
    </insert>

    <insert id="insertSelective" parameterType="com.coretheorylife.modules.shop.entity.TOrderLog" >
        insert into t_order_log
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="shopId != null" >
                shop_id,
            </if>
            <if test="orderId != null" >
                order_id,
            </if>
            <if test="purchaserId != null" >
                purchaser_id,
            </if>
            <if test="nowShipStatus != null" >
                now_ship_status,
            </if>
            <if test="nowStatus != null" >
                now_status,
            </if>
            <if test="beforeShipStatus != null" >
                before_ship_status,
            </if>
            <if test="beforeStatus != null" >
                before_status,
            </if>
            <if test="createOrderFlag != null" >
                create_order_flag,
            </if>
            <if test="code != null" >
                code,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="createUser != null" >
                create_user,
            </if>
            <if test="updateUser != null" >
                update_user,
            </if>
            <if test="version != null" >
                version,
            </if>
            <if test="deleteFlag != null" >
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="shopId != null" >
                #{shopId,jdbcType=BIGINT},
            </if>
            <if test="orderId != null" >
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="purchaserId != null" >
                #{purchaserId,jdbcType=BIGINT},
            </if>
            <if test="nowShipStatus != null" >
                #{nowShipStatus,jdbcType=INTEGER},
            </if>
            <if test="nowStatus != null" >
                #{nowStatus,jdbcType=INTEGER},
            </if>
            <if test="beforeShipStatus != null" >
                #{beforeShipStatus,jdbcType=INTEGER},
            </if>
            <if test="beforeStatus != null" >
                #{beforeStatus,jdbcType=INTEGER},
            </if>
            <if test="createOrderFlag != null" >
                #{createOrderFlag,jdbcType=BIT},
            </if>
            <if test="code != null" >
                #{code,jdbcType=INTEGER},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null" >
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="version != null" >
                #{version,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null" >
                #{deleteFlag,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.coretheorylife.modules.shop.entity.TOrderLogExample" resultType="java.lang.Integer" >
        select count(*) from t_order_log
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update t_order_log
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.shopId != null" >
                shop_id = #{record.shopId,jdbcType=BIGINT},
            </if>
            <if test="record.orderId != null" >
                order_id = #{record.orderId,jdbcType=BIGINT},
            </if>
            <if test="record.purchaserId != null" >
                purchaser_id = #{record.purchaserId,jdbcType=BIGINT},
            </if>
            <if test="record.nowShipStatus != null" >
                now_ship_status = #{record.nowShipStatus,jdbcType=INTEGER},
            </if>
            <if test="record.nowStatus != null" >
                now_status = #{record.nowStatus,jdbcType=INTEGER},
            </if>
            <if test="record.beforeShipStatus != null" >
                before_ship_status = #{record.beforeShipStatus,jdbcType=INTEGER},
            </if>
            <if test="record.beforeStatus != null" >
                before_status = #{record.beforeStatus,jdbcType=INTEGER},
            </if>
            <if test="record.createOrderFlag != null" >
                create_order_flag = #{record.createOrderFlag,jdbcType=BIT},
            </if>
            <if test="record.code != null" >
                code = #{record.code,jdbcType=INTEGER},
            </if>
            <if test="record.description != null" >
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null" >
                create_user = #{record.createUser,jdbcType=BIGINT},
            </if>
            <if test="record.updateUser != null" >
                update_user = #{record.updateUser,jdbcType=BIGINT},
            </if>
            <if test="record.version != null" >
                version = #{record.version,jdbcType=INTEGER},
            </if>
            <if test="record.deleteFlag != null" >
                delete_flag = #{record.deleteFlag,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update t_order_log
        set id = #{record.id,jdbcType=BIGINT},
            shop_id = #{record.shopId,jdbcType=BIGINT},
            order_id = #{record.orderId,jdbcType=BIGINT},
            purchaser_id = #{record.purchaserId,jdbcType=BIGINT},
            now_ship_status = #{record.nowShipStatus,jdbcType=INTEGER},
            now_status = #{record.nowStatus,jdbcType=INTEGER},
            before_ship_status = #{record.beforeShipStatus,jdbcType=INTEGER},
            before_status = #{record.beforeStatus,jdbcType=INTEGER},
            create_order_flag = #{record.createOrderFlag,jdbcType=BIT},
            code = #{record.code,jdbcType=INTEGER},
            description = #{record.description,jdbcType=VARCHAR},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            create_user = #{record.createUser,jdbcType=BIGINT},
            update_user = #{record.updateUser,jdbcType=BIGINT},
            version = #{record.version,jdbcType=INTEGER},
            delete_flag = #{record.deleteFlag,jdbcType=BIT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.coretheorylife.modules.shop.entity.TOrderLog" >
        update t_order_log
        <set >
            <if test="shopId != null" >
                shop_id = #{shopId,jdbcType=BIGINT},
            </if>
            <if test="orderId != null" >
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="purchaserId != null" >
                purchaser_id = #{purchaserId,jdbcType=BIGINT},
            </if>
            <if test="nowShipStatus != null" >
                now_ship_status = #{nowShipStatus,jdbcType=INTEGER},
            </if>
            <if test="nowStatus != null" >
                now_status = #{nowStatus,jdbcType=INTEGER},
            </if>
            <if test="beforeShipStatus != null" >
                before_ship_status = #{beforeShipStatus,jdbcType=INTEGER},
            </if>
            <if test="beforeStatus != null" >
                before_status = #{beforeStatus,jdbcType=INTEGER},
            </if>
            <if test="createOrderFlag != null" >
                create_order_flag = #{createOrderFlag,jdbcType=BIT},
            </if>
            <if test="code != null" >
                code = #{code,jdbcType=INTEGER},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null" >
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null" >
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.coretheorylife.modules.shop.entity.TOrderLog" >
        update t_order_log
        set shop_id = #{shopId,jdbcType=BIGINT},
            order_id = #{orderId,jdbcType=BIGINT},
            purchaser_id = #{purchaserId,jdbcType=BIGINT},
            now_ship_status = #{nowShipStatus,jdbcType=INTEGER},
            now_status = #{nowStatus,jdbcType=INTEGER},
            before_ship_status = #{beforeShipStatus,jdbcType=INTEGER},
            before_status = #{beforeStatus,jdbcType=INTEGER},
            create_order_flag = #{createOrderFlag,jdbcType=BIT},
            code = #{code,jdbcType=INTEGER},
            description = #{description,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=BIGINT},
            update_user = #{updateUser,jdbcType=BIGINT},
            version = #{version,jdbcType=INTEGER},
            delete_flag = #{deleteFlag,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>